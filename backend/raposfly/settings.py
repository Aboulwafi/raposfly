# -*- coding: utf-8 -*-
"""Django settings for raposfly project.

Generated by 'django-admin startproject' using Django 1.10.2.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/

"""

import os

# Check if running in production mode
PRODUCTION = 'RAPOSFLY_PRODUCTION' in os.environ

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Path to data directory
if PRODUCTION:
    DATA_DIR = "/var/lib/raposfly"
else:
    DATA_DIR = os.path.join(os.path.dirname(BASE_DIR), "_data")
    if not os.path.exists(DATA_DIR):
        os.mkdir(DATA_DIR)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/


# SECURITY WARNING: keep the secret key used in production secret!
def read_secret_key():
    """Read the SECRET_KEY from file."""
    with open(os.path.join(DATA_DIR, 'django_secret.txt'), 'r') as file:
        return file.readline().strip()


try:
    SECRET_KEY = read_secret_key()
except FileNotFoundError:
    from django.utils.crypto import get_random_string
    with open(os.path.join(DATA_DIR, 'django_secret.txt'), 'w') as file:
        print(get_random_string(
            50,
            'abcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*(-_=+)'), file=file)
    SECRET_KEY = read_secret_key()


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = not PRODUCTION

ALLOWED_HOSTS = ['localhost', 'backend.raposfly.shop']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'debug_toolbar',
    'rest_framework',
    'rest_framework_docs',
    'corsheaders',
    'django_cleanup',
    'colorful',
    'constance',
    'constance.backends.database',
    'shop',
]

MIDDLEWARE = [
    'debug_toolbar.middleware.DebugToolbarMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'raposfly.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'raposfly.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

DATABASE_PATH = os.path.join(DATA_DIR, 'db.sqlite3')

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': DATABASE_PATH,
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.'
                'UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.'
                'MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.'
                'CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.'
                'NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = '/srv/http/static/'

MEDIA_URL = '/media/'
if PRODUCTION:
    MEDIA_ROOT = '/srv/http/media/'
else:
    MEDIA_ROOT = os.path.join(DATA_DIR, 'media')

INTERNAL_IPS = ['127.0.0.1']
CORS_ORIGIN_ALLOW_ALL = True

CONSTANCE_BACKEND = 'constance.backends.database.DatabaseBackend'
CONSTANCE_CONFIG = {
    'EVENT_NAME': ('Raposfly', 'Name of the event.'),
    'DEFAULT_ITEM_COLOR': ('', 'Default color for the items.'),
    'VENDOR_RECEIPT': (False, 'Prince a vendor receipt for all purchases.'),
    'INDIVIDUAL_TICKETS': (True, 'Print individual tickets'),
    'PRINTER_ADDR': ('', 'Printer USB address (emtpy if missing)'),
}
